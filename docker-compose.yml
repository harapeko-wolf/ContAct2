services:
  frontend:
    build:
      context: .
      dockerfile: docker/frontend/Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    stdin_open: true
    tty: true

  backend:
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
    ports:
      - "80:80"
    volumes:
      - ./backend:/var/www/html
    environment:
      - APP_ENV=${APP_ENV:-local}
      - APP_KEY=${APP_KEY}
      - APP_DEBUG=${APP_DEBUG:-true}
      - APP_LOCALE=${APP_LOCALE:-ja}
      - APP_FALLBACK_LOCALE=${APP_FALLBACK_LOCALE:-ja}
      - APP_FAKER_LOCALE=${APP_FAKER_LOCALE:-ja_JP}
      - DB_CONNECTION=${DB_CONNECTION:-mysql}
      - DB_HOST=${DB_HOST:-mysql}
      - DB_PORT=${DB_PORT:-3306}
      - DB_DATABASE=${DB_DATABASE:-contact2_db}
      - DB_USERNAME=${DB_USERNAME:-contact2_user}
      - DB_PASSWORD=${DB_PASSWORD:-contact2_password}
    depends_on:
      - mysql

  mysql:
    image: mysql:8.4
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: contact2_db
      MYSQL_USER: contact2_user
      MYSQL_PASSWORD: contact2_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    environment:
      PMA_HOST: mysql
      PMA_USER: contact2_user
      PMA_PASSWORD: contact2_password
    ports:
      - "8080:80"
    depends_on:
      - mysql

  cron:
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
    volumes:
      - ./backend:/var/www/html
    environment:
      - APP_ENV=${APP_ENV:-local}
      - APP_KEY=${APP_KEY}
      - APP_DEBUG=${APP_DEBUG:-true}
      - APP_LOCALE=${APP_LOCALE:-ja}
      - APP_FALLBACK_LOCALE=${APP_FALLBACK_LOCALE:-ja}
      - APP_FAKER_LOCALE=${APP_FAKER_LOCALE:-ja_JP}
      - DB_CONNECTION=${DB_CONNECTION:-mysql}
      - DB_HOST=${DB_HOST:-mysql}
      - DB_PORT=${DB_PORT:-3306}
      - DB_DATABASE=${DB_DATABASE:-contact2_db}
      - DB_USERNAME=${DB_USERNAME:-contact2_user}
      - DB_PASSWORD=${DB_PASSWORD:-contact2_password}
      - MAIL_MAILER=${MAIL_MAILER:-smtp}
      - MAIL_HOST=${MAIL_HOST}
      - MAIL_PORT=${MAIL_PORT}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - MAIL_ENCRYPTION=${MAIL_ENCRYPTION}
      - MAIL_FROM_ADDRESS=${MAIL_FROM_ADDRESS}
      - MAIL_FROM_NAME=${MAIL_FROM_NAME}
    depends_on:
      - mysql
      - backend
    command: ["sh", "/usr/local/bin/start-cron.sh"]

  nginx:
    image: nginx:alpine
    ports:
      - "8000:80"
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - backend

  ngrok:
    image: ngrok/ngrok:latest
    restart: unless-stopped
    command:
      - "start"
      - "--all"
      - "--config"
      - "/etc/ngrok.yml"
    volumes:
      - ./ngrok.yml:/etc/ngrok.yml
    ports:
      - 4040:4040
    depends_on:
      - nginx
    environment:
      - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN}

volumes:
  mysql_data: 